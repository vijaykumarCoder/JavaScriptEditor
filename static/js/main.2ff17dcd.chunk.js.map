{"version":3,"sources":["components/Editor.js","components/App.js","index.js"],"names":["Editor","props","displayName","language","value","onChange","useState","open","setOpen","className","type","onClick","prevOpen","icon","faCompressAlt","faExpandAlt","onBeforeChange","editor","data","options","lineWrapping","lint","mode","theme","lineNumbers","App","html","setHtml","css","setCss","js","setJs","srcDoc","setSrcDoc","useEffect","timeout","setTimeout","clearTimeout","title","sandbox","frameBorder","width","height","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kQAUe,SAASA,EAAOC,GAAQ,IAE/BC,EAIAD,EAJAC,YACAC,EAGAF,EAHAE,SACAC,EAEAH,EAFAG,MACAC,EACAJ,EADAI,SAL8B,EAOfC,oBAAS,GAPM,mBAO/BC,EAP+B,KAO1BC,EAP0B,KAWlC,OACI,sBAAKC,UAAS,2BAAsBF,EAAO,GAAG,aAA9C,UACI,sBAAKE,UAAU,eAAf,UACKP,EACF,wBACAQ,KAAK,SACLD,UAAU,sBACTE,QAAY,kBAAMH,GAAS,SAAAI,GAAQ,OAAIA,MAHxC,SAKC,cAAC,IAAD,CAAiBC,KAAON,EAAOO,IAAgBC,WAGhD,cAAC,aAAD,CACKC,eAhBhB,SAAsBC,EAAOC,EAAKd,GAC9BC,EAASD,IAgBGA,MAAUA,EACVK,UAAW,sBACXU,QAAW,CACPC,cAAe,EACfC,MAAQ,EACRC,KAAOnB,EACPoB,MAAQ,WACRC,aAAc,QCoBvBC,MA3Df,WAAgB,IAAD,EACWnB,mBAAS,IADpB,mBACNoB,EADM,KACAC,EADA,OAEUrB,mBAAS,IAFnB,mBAENsB,EAFM,KAEDC,EAFC,OAGQvB,mBAAS,IAHjB,mBAGNwB,EAHM,KAGFC,EAHE,OAIezB,mBAAS,IAJxB,mBAIN0B,EAJM,KAIEC,EAJF,KAsBb,OAfFC,qBAAU,WACR,IAAMC,EAAUC,YAAW,WACzBH,EAAU,kCAAD,OAGKP,EAHL,oCAIME,EAJN,sCAKOE,EALP,qCAST,KACF,OAAO,kBAAMO,aAAaF,MACzB,CAACT,EAAKE,EAAIE,IAGT,iCACA,sBAAKrB,UAAU,gBAAf,UACE,cAACT,EAAD,CACAE,YAAY,OACZC,SAAS,MACTC,MAAOsB,EACPrB,SAAUsB,IAEV,cAAC3B,EAAD,CACAE,YAAY,MACZC,SAAS,MACTC,MAAOwB,EACPvB,SAAUwB,IAEV,cAAC7B,EAAD,CACAE,YAAY,aACZC,SAAS,aACTC,MAAO0B,EACPzB,SAAU0B,OAIZ,qBAAKtB,UAAU,OAAf,SACE,wBACEuB,OAAUA,EACVM,MAAM,SACNC,QAAQ,gBACRC,YAAc,IACdC,MAAM,OACNC,OAAO,eClDfC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.2ff17dcd.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport 'codemirror/lib/codemirror.css'\r\nimport 'codemirror/theme/material.css'\r\nimport 'codemirror/mode/javascript/javascript'\r\nimport 'codemirror/mode/xml/xml'\r\nimport 'codemirror/mode/css/css'\r\nimport { Controlled as ControlledEditor } from 'react-codemirror2'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCompressAlt , faExpandAlt } from '@fortawesome/free-solid-svg-icons'\r\n\r\nexport default function Editor(props) {\r\n    const {\r\n        displayName,\r\n        language,\r\n        value,\r\n        onChange \r\n    } = props\r\nconst [open,setOpen] = useState(true)\r\n    function handleChange(editor,data,value ) {\r\n        onChange(value)    \r\n    }\r\n    return (\r\n        <div className={`editor-container ${open ? '':'collapsed'}`}>\r\n            <div className=\"editor-title\">\r\n               { displayName }\r\n               <button\r\n               type=\"button\"\r\n               className=\"expand-collapse-btn\"\r\n                onClick = { () => setOpen( prevOpen =>!prevOpen)}\r\n               >\r\n                <FontAwesomeIcon icon={ open ? faCompressAlt : faExpandAlt } />\r\n               </button>\r\n               </div> \r\n               <ControlledEditor \r\n                    onBeforeChange = { handleChange }\r\n                    value = { value }\r\n                    className= \"code-mirror-wrapper\"\r\n                    options = {{\r\n                        lineWrapping : true,\r\n                        lint  : true,\r\n                        mode : language,\r\n                        theme : \"material\",\r\n                        lineNumbers : true\r\n                    }}\r\n\r\n               />\r\n        \r\n\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import Editor from './Editor'\nimport { useState , useEffect } from 'react'\n\nfunction App() {\n  const [html, setHtml] = useState('')\n  const [css, setCss ] = useState('')\n  const [js, setJs ] = useState('')\n  const [srcDoc, setSrcDoc] = useState('')\n\n\nuseEffect(() => {\n  const timeout = setTimeout(() =>{\n    setSrcDoc(\n      `\n      <html>\n        <body> ${ html }</body>\n        <style> ${ css }</style>\n        <script> ${ js } </script>\n      </html>\n  `\n    )\n  },250)\n  return () => clearTimeout(timeout)\n}, [html,css,js])\n\n  return (\n    <html>\n    <div className=\"pane top-pane\">\n      <Editor \n      displayName=\"HTML\" \n      language=\"xml\"\n      value={html}\n      onChange={setHtml}\n      />\n      <Editor \n      displayName=\"CSS\" \n      language=\"css\"\n      value={css}\n      onChange={setCss}\n      />\n      <Editor \n      displayName=\"JAVASCRIPT\" \n      language=\"javascript\"\n      value={js}\n      onChange={setJs}\n      />\n     \n    </div>\n    <div className=\"pane\">\n      <iframe \n        srcDoc = {srcDoc}\n        title=\"output\"\n        sandbox=\"allow-scripts\"\n        frameBorder = \"0\"\n        width=\"100%\"\n        height=\"100%\"\n      />\n    </div>\n    </html>\n      );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}